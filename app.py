# -*- coding: utf-8 -*-
"""Mémoire VF.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c-MV9U2ROPR3D9ZkWtNq5HLuJjnye7ZJ
"""

import streamlit as st
import pandas as pd
import random
import json
import gspread
from google.oauth2.service_account import Credentials

# FONCTION D'EXPORT GOOGLE SHEETS (via secrets Streamlit Cloud)

def enregistrer_donnees_google_sheet(donnees_dict):
    scopes = ["https://www.googleapis.com/auth/spreadsheets"]

    # Récupération sécurisée depuis les secrets de Streamlit Cloud
    creds = Credentials.from_service_account_info(
        json.loads(st.secrets["GOOGLE_SERVICE_ACCOUNT"]),
        scopes=scopes
    )

    client = gspread.authorize(creds)
    sheet = client.open("Expérimentation_Transparence_IA").worksheet("Réponses")

    colonnes = [
        "groupe", "produit_choisi",
        "confiance", "comprehension", "experience", "aisance_IA",
        "comprehension_post", "fiabilite", "equite", "intention"
    ]
    ligne = [donnees_dict.get(col, "") for col in colonnes]
    sheet.append_row(ligne)

# INITIALISATION

if "page" not in st.session_state:
    st.session_state.page = "accueil"

# PAGE 1 : ACCUEIL

if st.session_state.page == "accueil":
    st.title("Expérimentation : Recommandations et Transparence")

    st.markdown("""
    Bienvenue et merci pour votre participation !

    Dans le cadre de notre mémoire de recherche, nous menons une étude sur la transparence des systèmes de recommandation basés sur l’intelligence artificielle.

    Vous allez être invité(e) à interagir avec une plateforme simulée de type e-commerce, où des recommandations de produits vous seront proposées.
    L’objectif est de mieux comprendre comment différents niveaux de transparence influencent la confiance des utilisateurs et leur comportement.

    Toutes vos réponses sont anonymes et ne seront utilisées qu'à des fins de recherche.
    La participation est volontaire et vous pouvez quitter l’étude à tout moment.

    En cliquant sur le bouton ci-dessous, vous donnez votre consentement pour participer à cette étude.
    """)

    if st.button("Commencer l’expérimentation"):
        st.session_state.page = "questionnaire_pre"

# PAGE 2 : QUESTIONNAIRE PRÉ-EXPOSITION

elif st.session_state.page == "questionnaire_pre":
    st.header("Avant de commencer...")

    st.markdown("""
    Avant de commencer, merci de répondre aux affirmations suivantes en indiquant votre degré d'accord.

    Veuillez répondre en toute sincérité.
    """)

    ## Questions pré-exposition (Likert 1 à 5)

    q1 = st.slider("Je fais confiance aux recommandations proposées par les plateformes en ligne.", 1, 5, 3)
    q2 = st.slider("Je comprends en général comment ces recommandations sont générées.", 1, 5, 3)
    q3 = st.slider("J’ai déjà eu de bonnes expériences avec des recommandations personnalisées.", 1, 5, 3)
    q4 = st.slider("Je suis à l’aise avec l’usage de l’IA dans le e-commerce.", 1, 5, 3)

    if st.button("Passer à l’expérience"):

      # Enregistrer les réponses dans la session
        st.session_state.q_pre = {
            "confiance": q1,
            "comprehension": q2,
            "experience": q3,
            "aisance_IA": q4
        }
        st.session_state.page = "interface_reco"

# PAGE 3 : INTERFACE DE RECOMMANDATION

elif st.session_state.page == "interface_reco":
    st.header("Vos recommandations")

    if "groupe" not in st.session_state:
        st.session_state.groupe = random.choice(["faible", "moyenne", "elevee"])

    groupe = st.session_state.groupe
    st.subheader(f"Niveau de transparence : {groupe}")

    if groupe == "faible":
        st.markdown("Voici une sélection de produits susceptibles de vous intéresser.")
    elif groupe == "moyenne":
        st.markdown("Ces produits vous sont proposés en fonction de vos préférences générales (ex. : articles consultés récemment, catégories populaires).")
    elif groupe == "elevee":
        st.markdown("""
         Ces recommandations sont basées sur plusieurs critères :
        - Vos produits consultés récemment
        - Les articles ajoutés à votre panier
        - Vos préférences déclarées lors de l’inscription

        Chaque suggestion est le résultat d’une analyse de ces données via un algorithme explicable.
        """)
    # Simulation d’une liste de produits
    st.markdown("Produits recommandés :")
    produits = ["Livre 'IA pour les nuls'", "Casque Bluetooth", "Abonnement streaming", "Lampe connectée"]
    selection = st.radio("Quel produit vous attire le plus ?", produits)

    if st.button("Valider mon choix"):

        # Stockage du choix dans la session
        st.session_state.selection = selection
        st.session_state.page = "questionnaire_post"

# PAGE 4 : QUESTIONNAIRE POST-EXPOSITION

elif st.session_state.page == "questionnaire_post":
    st.header("Questionnaire - Après l’interaction")

    st.markdown("""
    Merci pour votre participation. Nous aimerions maintenant connaître votre ressenti sur les recommandations que vous venez de recevoir.

    Veuillez indiquer à quel point vous êtes d’accord avec les affirmations suivantes :
    """)

    # Questions post-exposition (Likert 1 à 5)

    p1 = st.slider("Je comprends pourquoi ces produits m’ont été recommandés.", 1, 5, 3)
    p2 = st.slider("L’algorithme me semble fiable et pertinent.", 1, 5, 3)
    p3 = st.slider("Je considère que les recommandations étaient justes et équilibrées.", 1, 5, 3)
    p4 = st.slider("Je serais prêt(e) à utiliser ce type de système à l’avenir.", 1, 5, 3)

    if st.button("Terminer l’étude"):
        st.session_state.q_post = {
            "comprehension_post": p1,
            "fiabilite": p2,
            "equite": p3,
            "intention": p4
        }
        st.session_state.page = "fin"

# PAGE 5 : FIN + ENREGISTREMENT

elif st.session_state.page == "fin":
    st.header("Merci pour votre participation !")

    st.markdown("""
    Votre contribution est précieuse et nous aide à mieux comprendre le lien entre transparence, confiance et technologies de recommandation.

    Les données ont bien été enregistrées. Vous pouvez maintenant fermer cette page.
    """)

    # Récupération des données à sauvegarder
    donnees = {
        "groupe": st.session_state.groupe,
        "produit_choisi": st.session_state.selection,
        **st.session_state.q_pre,
        **st.session_state.q_post
    }

    try:
        enregistrer_donnees_google_sheet(donnees)
        st.success("✅ Enregistrement réussi.")
    except Exception as e:
        st.error(f"❌ Une erreur est survenue : {e}")